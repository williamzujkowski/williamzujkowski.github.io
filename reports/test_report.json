{
  "timestamp": "2025-09-20T22:03:31-04:00",
  "summary": {
    "total_categories": 1,
    "passed_categories": 1,
    "failed_categories": 0
  },
  "details": [
    {
      "category": "smoke",
      "passed": true,
      "return_code": 0,
      "output": ".........                                                                [100%]\n=============================== warnings summary ===============================\ntests/smoke/test_build_deploy.py:35\n  /home/william/git/williamzujkowski.github.io/tests/smoke/test_build_deploy.py:35: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\ntests/smoke/test_build_deploy.py:51\n  /home/william/git/williamzujkowski.github.io/tests/smoke/test_build_deploy.py:51: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n========================= memory consumption estimates =========================\nwilliamzujkowski.github.io::tests::smoke::test_build_deploy.py::TestBuildSystem::test_npm_build               - 96.5 MB\nwilliamzujkowski.github.io::tests::smoke::test_build_deploy.py::TestBuildSystem::test_npm_installed           - 17.5 MB\nwilliamzujkowski.github.io::tests::smoke::test_build_deploy.py::TestCriticalScripts::test_manifest_exists     - 1.6 MB\nwilliamzujkowski.github.io::tests::smoke::test_build_deploy.py::TestBuildSystem::test_tailwind_config_exists  - 40.0 KB\n9 passed, 2 warnings in 5.92s\n",
      "errors": "/home/william/.pyenv/versions/3.12.3/lib/python3.12/site-packages/pytest_asyncio/plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
      "summary": "9 passed, 2 warnings in 5.92s"
    }
  ]
}