<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="{{ description or site.description }}">
    <meta name="author" content="{{ site.author }}">
    <meta name="keywords" content="{{ keywords or site.keywords }}">
    
    <title>{% if title != "Home" %}{{ title }} - {% endif %}{{ site.title }}</title>
    
    <link rel="stylesheet" href="/assets/css/main.css">
    <link rel="canonical" href="{{ site.url }}{{ page.url }}">
    
    <!-- RSS Feed -->
    <link rel="alternate" type="application/atom+xml" title="{{ site.title }} Feed" href="{{ site.url }}/feed.xml">
    
    <!-- Favicons and PWA -->
    {% include "partials/favicon-meta.njk" %}
    
    <!-- Open Graph -->
    <meta property="og:title" content="{% if title != "Home" %}{{ title }}{% else %}{{ site.title }}{% endif %}">
    <meta property="og:description" content="{{ description or site.description }}">
    <meta property="og:type" content="{% if layout == "post" %}article{% else %}website{% endif %}">
    <meta property="og:url" content="{{ site.url }}{{ page.url }}">
    <meta property="og:image" content="{{ site.url }}/assets/images/og-image.jpg">
    <meta property="og:site_name" content="{{ site.title }}">
    <meta property="og:locale" content="en_US">
    {% if layout == "post" %}
    <meta property="article:author" content="{{ site.author }}">
    <meta property="article:published_time" content="{{ page.date | htmlDateString }}">
    {% endif %}
    
    
    <!-- Additional SEO Meta -->
    <meta name="robots" content="index, follow">
    <meta name="googlebot" content="index, follow">
    
    <!-- Structured Data -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "{% if layout == "post" %}BlogPosting{% else %}WebSite{% endif %}",
        {% if layout == "post" %}
        "headline": "{{ title }}",
        "description": "{{ description }}",
        "datePublished": "{{ page.date | htmlDateString }}",
        "dateModified": "{{ page.inputPath | gitLastModified | htmlDateString or page.date | htmlDateString }}",
        "author": {
            "@type": "Person",
            "name": "{{ site.author }}",
            "url": "{{ site.url }}/about/",
            "sameAs": [
                "{{ site.social.github }}",
                "{{ site.social.linkedin }}"
            ]
        },
        "publisher": {
            "@type": "Person",
            "name": "{{ site.author }}",
            "url": "{{ site.url }}",
            "logo": {
                "@type": "ImageObject",
                "url": "{{ site.url }}/assets/images/headshot.png"
            }
        },
        "image": {
            "@type": "ImageObject",
            "url": "{{ site.url }}/assets/images/og-image.jpg"
        },
        "mainEntityOfPage": {
            "@type": "WebPage",
            "@id": "{{ site.url }}{{ page.url }}"
        },
        "url": "{{ site.url }}{{ page.url }}"
        {% else %}
        "name": "{{ site.title }}",
        "description": "{{ site.description }}",
        "url": "{{ site.url }}{{ page.url }}",
        "author": {
            "@type": "Person",
            "name": "{{ site.author }}",
            "url": "{{ site.url }}/about/",
            "sameAs": [
                "{{ site.social.github }}",
                "{{ site.social.linkedin }}"
            ]
        },
        "potentialAction": {
            "@type": "SearchAction",
            "target": "{{ site.url }}/posts/?search={search_term_string}",
            "query-input": "required name=search_term_string"
        }
        {% endif %}
    }
    </script>
    
    <!-- Resource Hints for Performance -->
    <link rel="preconnect" href="https://rsms.me">
    <link rel="dns-prefetch" href="https://rsms.me">
    
    <!-- Inter font -->
    <link rel="stylesheet" href="https://rsms.me/inter/inter.css">
    
    <!-- Dark mode script -->
    <script>
        // Initialize dark mode and theme color
        (function() {
            const isDark = localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches);
            const themeColorMeta = document.querySelector('meta[name="theme-color"]');
            
            if (isDark) {
                document.documentElement.classList.add('dark');
                if (themeColorMeta) themeColorMeta.content = '#111827';
            } else {
                document.documentElement.classList.remove('dark');
                if (themeColorMeta) themeColorMeta.content = '#1e40af';
            }
        })();
    </script>
</head>
<body class="min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-300 antialiased">
    <!-- Skip to main content -->
    <a href="#main" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary-600 text-white px-4 py-2 rounded-md">
        Skip to main content
    </a>
    
    <!-- Header -->
    <header class="sticky top-0 z-50 w-full border-b border-gray-200 dark:border-gray-800 bg-white/80 dark:bg-gray-900/80 backdrop-blur-xl">
        <nav class="container mx-auto px-4 sm:px-6 lg:px-8" aria-label="Primary navigation">
            <div class="flex items-center justify-between h-16">
                <!-- Logo -->
                <div class="flex-shrink-0">
                    <a href="/" class="text-xl font-semibold gradient-text">
                        {{ site.title }}
                    </a>
                </div>
                
                <!-- Desktop Navigation -->
                <div class="hidden md:block">
                    <div class="ml-10 flex items-baseline space-x-1">
                        {{ collections.all | eleventyNavigation | eleventyNavigationToHtml({
                            listClass: "flex items-center space-x-1",
                            listItemClass: "",
                            anchorClass: "px-3 py-2 rounded-lg text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200",
                            activeAnchorClass: "bg-primary-50 dark:bg-primary-900/20 text-primary-600 dark:text-primary-400",
                            markdownIteration: false
                        }) | safe }}
                    </div>
                </div>
                
                <!-- Dark mode toggle & Mobile menu button -->
                <div class="flex items-center space-x-4">
                    <!-- Dark mode toggle -->
                    <button type="button" onclick="toggleDarkMode()" class="p-2 rounded-lg text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200" aria-label="Toggle dark mode">
                        <!-- Light mode icon -->
                        <svg class="w-5 h-5 block dark:hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
                        </svg>
                        <!-- Dark mode icon -->
                        <svg class="w-5 h-5 hidden dark:block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                        </svg>
                    </button>
                    
                    <!-- Mobile menu button -->
                    <button type="button" onclick="toggleMobileMenu()" class="md:hidden p-2 rounded-lg text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200" aria-label="Toggle menu">
                        <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                        </svg>
                    </button>
                </div>
            </div>
            
            <!-- Mobile Navigation -->
            <div id="mobile-menu" class="hidden md:hidden">
                <div class="px-2 pt-2 pb-3 space-y-1">
                    {{ collections.all | eleventyNavigation | eleventyNavigationToHtml({
                        listClass: "space-y-1",
                        listItemClass: "",
                        anchorClass: "block px-3 py-2 rounded-lg text-base font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200",
                        activeAnchorClass: "bg-primary-50 dark:bg-primary-900/20 text-primary-600 dark:text-primary-400",
                        markdownIteration: false
                    }) | safe }}
                </div>
            </div>
        </nav>
    </header>
    
    <!-- Breadcrumbs -->
    {% if eleventyNavigation and eleventyNavigation.key %}
    {% set breadcrumbs = collections.all | eleventyNavigationBreadcrumb(eleventyNavigation.key) %}
    {% if breadcrumbs and breadcrumbs.length > 0 %}
    <nav class="container mx-auto px-4 sm:px-6 lg:px-8 py-4" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-2 text-sm">
            <li>
                <a href="/" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">Home</a>
            </li>
            {% for crumb in breadcrumbs %}
            <li class="flex items-center">
                <svg class="w-4 h-4 mx-2 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                </svg>
                {% if loop.last %}
                    <span class="text-gray-900 dark:text-gray-100 font-medium">{{ crumb.title }}</span>
                {% else %}
                    <a href="{{ crumb.url }}" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">{{ crumb.title }}</a>
                {% endif %}
            </li>
            {% endfor %}
        </ol>
    </nav>
    
    <!-- Breadcrumb Structured Data -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
            {
                "@type": "ListItem",
                "position": 1,
                "name": "Home",
                "item": "{{ site.url }}/"
            }
            {%- for crumb in breadcrumbs -%}
            ,{
                "@type": "ListItem",
                "position": {{ loop.index + 1 }},
                "name": "{{ crumb.title }}",
                "item": "{{ site.url }}{{ crumb.url }}"
            }
            {%- endfor -%}
        ]
    }
    </script>
    {% endif %}
    {% endif %}
    
    <!-- Main content -->
    <main id="main" class="flex-grow">
        {{ content | safe }}
    </main>
    
    <!-- Footer -->
    <footer class="mt-auto border-t border-gray-200 dark:border-gray-800 bg-gray-50 dark:bg-gray-800/50">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <!-- About -->
                <div>
                    <h3 class="text-sm font-semibold text-gray-900 dark:text-gray-100 uppercase tracking-wider mb-4">About</h3>
                    <p class="text-gray-600 dark:text-gray-400">
                        Personal website of {{ site.author }}, exploring technology and sharing knowledge.
                    </p>
                </div>
                
                <!-- Quick Links -->
                <div>
                    <h3 class="text-sm font-semibold text-gray-900 dark:text-gray-100 uppercase tracking-wider mb-4">Quick Links</h3>
                    {{ collections.all | eleventyNavigation | eleventyNavigationToHtml({
                        listClass: "space-y-2",
                        listItemClass: "",
                        anchorClass: "text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 transition-colors duration-200",
                        markdownIteration: false
                    }) | safe }}
                </div>
                
                <!-- Connect -->
                <div>
                    <h3 class="text-sm font-semibold text-gray-900 dark:text-gray-100 uppercase tracking-wider mb-4">Connect</h3>
                    <div class="flex space-x-4">
                        <a href="{{ site.social.github }}" class="text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 transition-colors duration-200" aria-label="GitHub" rel="noopener noreferrer">
                            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                            </svg>
                        </a>
                        <a href="{{ site.social.linkedin }}" class="text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 transition-colors duration-200" aria-label="LinkedIn" rel="noopener noreferrer">
                            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                            </svg>
                        </a>
                        <a href="/feed.xml" class="text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 transition-colors duration-200" aria-label="RSS Feed">
                            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M3.429 5.1v2.4c7.248 0 13.114 5.886 13.114 13.142h2.4C18.943 12.18 11.858 5.1 3.429 5.1zm0 4.8v2.4c3.924 0 7.114 3.206 7.114 7.142h2.4c0-5.256-4.276-9.542-9.514-9.542zM6.171 16.386c-.756 0-1.371.615-1.371 1.371 0 .756.615 1.371 1.371 1.371.756 0 1.371-.615 1.371-1.371 0-.756-.615-1.371-1.371-1.371z"/>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-700">
                <p class="text-center text-sm text-gray-600 dark:text-gray-400">
                    &copy; {{ site.currentYear }} {{ site.author }}. All rights reserved. 
                    Built with <a href="https://www.11ty.dev/" class="text-primary-600 hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300">Eleventy</a> 
                    and <a href="https://tailwindcss.com/" class="text-primary-600 hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300">Tailwind CSS</a>.
                </p>
            </div>
        </div>
    </footer>
    
    <!-- Scripts -->
    <script>
        function toggleDarkMode() {
            const html = document.documentElement;
            const themeColorMeta = document.querySelector('meta[name="theme-color"]');
            
            if (html.classList.contains('dark')) {
                html.classList.remove('dark');
                localStorage.theme = 'light';
                if (themeColorMeta) themeColorMeta.content = '#1e40af';
            } else {
                html.classList.add('dark');
                localStorage.theme = 'dark';
                if (themeColorMeta) themeColorMeta.content = '#111827';
            }
        }
        
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(function() {
                // Show success message
                showToast('Link copied to clipboard!');
            }, function(err) {
                // Fallback for older browsers
                const textArea = document.createElement("textarea");
                textArea.value = text;
                textArea.style.position = "fixed";
                textArea.style.left = "-999999px";
                textArea.style.top = "-999999px";
                document.body.appendChild(textArea);
                textArea.focus();
                textArea.select();
                try {
                    document.execCommand('copy');
                    showToast('Link copied to clipboard!');
                } catch (err) {
                    showToast('Failed to copy link');
                }
                document.body.removeChild(textArea);
            });
        }
        
        function showToast(message) {
            // Create toast element
            const toast = document.createElement('div');
            toast.className = 'fixed bottom-4 right-4 bg-gray-800 dark:bg-gray-200 text-white dark:text-gray-800 px-4 py-2 rounded-lg shadow-lg transform transition-all duration-300 translate-y-full';
            toast.textContent = message;
            document.body.appendChild(toast);
            
            // Animate in
            setTimeout(() => {
                toast.classList.remove('translate-y-full');
                toast.classList.add('translate-y-0');
            }, 10);
            
            // Remove after 3 seconds
            setTimeout(() => {
                toast.classList.remove('translate-y-0');
                toast.classList.add('translate-y-full');
                setTimeout(() => {
                    document.body.removeChild(toast);
                }, 300);
            }, 3000);
        }
        
        function toggleMobileMenu() {
            const menu = document.getElementById('mobile-menu');
            menu.classList.toggle('hidden');
        }
    </script>
    
    <!-- Back to Top Button -->
    <script src="/assets/js/back-to-top.js"></script>
    
    <!-- Mermaid Diagram Support -->
    <script type="module">
        import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs';
        
        // Initialize mermaid with proper settings
        mermaid.initialize({ 
            startOnLoad: false, // We'll manually init after DOM manipulation
            theme: 'default',
            themeVariables: {
                primaryColor: '#6366f1',
                primaryTextColor: '#fff',
                primaryBorderColor: '#4f46e5',
                lineColor: '#e5e7eb',
                secondaryColor: '#f3f4f6',
                tertiaryColor: '#fff'
            },
            securityLevel: 'loose',
            flowchart: {
                useMaxWidth: true,
                htmlLabels: true
            }
        });
        
        // Process Mermaid diagrams and THEN initialize code-collapse
        window.addEventListener('DOMContentLoaded', async function() {
            // Step 1: Find and process all mermaid code blocks
            const mermaidBlocks = document.querySelectorAll('pre code.language-mermaid');
            
            if (mermaidBlocks.length > 0) {
                console.log('Processing', mermaidBlocks.length, 'Mermaid diagrams...');
                
                // Convert each mermaid code block to a diagram
                for (const element of mermaidBlocks) {
                    const graphDefinition = element.textContent;
                    const preElement = element.parentNode;
                    
                    // Create a container div for the mermaid diagram
                    const containerDiv = document.createElement('div');
                    containerDiv.className = 'mermaid-container';
                    containerDiv.setAttribute('data-mermaid', 'true');
                    containerDiv.style.cssText = 'position: relative; width: 100%; overflow-x: auto; margin: 1.5rem 0;';
                    
                    // Create the mermaid div
                    const graphDiv = document.createElement('div');
                    graphDiv.className = 'mermaid';
                    graphDiv.textContent = graphDefinition;
                    
                    // Replace the pre element with the container - this removes the code block entirely
                    preElement.parentNode.replaceChild(containerDiv, preElement);
                    containerDiv.appendChild(graphDiv);
                }
                
                // Step 2: Initialize all mermaid diagrams
                await mermaid.run();
                console.log('Mermaid diagrams rendered');
                
                // Ensure diagrams are visible
                document.querySelectorAll('.mermaid-container').forEach(function(container) {
                    container.style.display = 'block';
                    container.style.visibility = 'visible';
                    container.style.maxHeight = 'none';
                    container.style.overflow = 'visible';
                });
            }
            
            // Step 3: NOW initialize code-collapse for remaining code blocks
            // Load and run code-collapse.js after Mermaid is done
            if (!window.codeCollapseLoaded) {
                const script = document.createElement('script');
                script.src = '/assets/js/code-collapse.js';
                script.onload = function() {
                    console.log('Code collapse loaded');
                    // The script will auto-initialize for non-Mermaid blocks
                };
                document.body.appendChild(script);
                window.codeCollapseLoaded = true;
            }
        });
    </script>
</body>
</html>